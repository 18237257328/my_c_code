/*
Pta题目1092 最好吃的月饼 (20 分)
若想评比出一种“最好吃”的月饼，那势必在吃货界引发一场腥风血雨…… 在这里我们用数字说话，给出全国各地各种月饼的销量，要求你从中找出销量冠军，认定为最好吃的月饼。

输入格式：
输入首先给出两个正整数 N（≤1000）和 M（≤100），分别为月饼的种类数（于是默认月饼种类从 1 到 N 编号）和参与统计的城市数量。

接下来 M 行，每行给出 N 个非负整数（均不超过 1 百万），其中第 i 个整数为第 i 种月饼的销量（块）。数字间以空格分隔。

输出格式：
在第一行中输出最大销量，第二行输出销量最大的月饼的种类编号。如果冠军不唯一，则按编号递增顺序输出并列冠军。数字间以 1 个空格分隔，行首尾不得有多余空格。

输入样例：
5 3
1001 992 0 233 6
8 0 2018 0 2008
36 18 0 1024 4
输出样例：
2018
3 5 
*/
#include<bits/stdc++.h>
using namespace std;

int cmp(int a,int b){
	return a>b;
} 

int main(void)
{
    int n,m,i,j,a[1000][1000],ans1[1000]={0},ans2[1000]={0};
    scanf ("%d %d",&n,&m);
    for (i=0;i<m;i++) {
    	for (j=0;j<n;j++) {
    		scanf ("%d",&a[i][j]);
		}
	}
	
	for (j=0;j<n;j++) {
		for (i=0;i<m;i++) {
			ans1[j]=ans1[j]+a[i][j];
			ans2[j]=ans2[j]+a[i][j];
		}
	}
	sort(ans1,ans1+n,cmp);
	int max=ans1[0],t=0;
	printf ("%d\n",max);
	for (i=0;i<n;i++) {
		if (ans2[i]==max) {
			t++;
			if (t!=1) printf (" ");
			printf ("%d",i+1);
		}
	}
	return 0;
}


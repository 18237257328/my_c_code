/*
蓝桥杯题目 算法训练 矩阵乘法  
时间限制：1.0s   内存限制：512.0MB
    
问题描述
　　输入两个矩阵，分别是m*s，s*n大小。输出两个矩阵相乘的结果。
输入格式
　　第一行，空格隔开的三个正整数m,s,n（均不超过200）。
　　接下来m行，每行s个空格隔开的整数，表示矩阵A（i，j）。
　　接下来s行，每行n个空格隔开的整数，表示矩阵B（i，j）。
输出格式
　　m行，每行n个空格隔开的整数，输出相乘後的矩阵C（i，j）的值。
样例输入
2 3 2
1 0 -1
1 1 -3
0 3
1 2
3 1
样例输出
-3 2
-8 2

提示
矩阵C应该是m行n列，其中C(i,j)等于矩阵A第i行行向量与矩阵B第j列列向量的内积。
例如样例中C(1,1)=(1,0,-1)*(0,1,3) = 1 * 0 +0*1+(-1)*3=-3 
*/ 
#include<stdio.h>
int main(void){
	int m,s,n,i,j,k;
	int a[300][300],b[300][300],c[300][300];
	scanf ("%d %d %d",&m,&s,&n);
	for (i=0;i<m;i++) {
		for(j=0;j<s;j++) {
			scanf ("%d",&a[i][j]);
		} 
	} 
	for (i=0;i<s;i++) {
		for(j=0;j<n;j++) {
			scanf ("%d",&b[i][j]);
		} 
	} 
	for (i=0;i<m;i++) {
		for (j=0;j<n;j++) {
			for (k=0;k<s;k++) {
				c[i][j]=c[i][j]+a[i][k]*b[k][j];
			}
		}
	}
	for (i=0;i<m;i++) {
		for (j=0;j<n;j++) {
			printf ("%d ",c[i][j]);
		}
		printf ("\n");
	}
	return 0;
}
